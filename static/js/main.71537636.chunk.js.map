{"version":3,"sources":["services/api.js","components/Button.js","components/Home.js","components/ShopCart.js","components/ProductDetails.js","components/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["getCategories","a","fetch","response","data","json","getProductsFromCategoryAndQuery","categoryId","query","response1","response2","response3","Button","this","props","clickFunction","buttonText","itemsCount","data-testid","type","onClick","className","Component","Home","goToShopCart","history","shopCartItems","state","push","searchProducts","bind","renderResults","renderCategories","setCategoryFilter","addItemToShopCart","productsList","undefined","categoriesList","categorias","setState","target","value","results","searchFilter","parentElement","firstChild","itemId","previous","Number","length","freeShipping","map","item","key","id","title","price","to","src","thumbnail","alt","category","htmlFor","name","onChange","emptyListMessage","ShopCart","setShopCartItems","goToCheckout","addItem","shopCartItemsId","emptyCart","cartItems","items","match","params","split","itemsInfoArray","forEach","requestItemInfo","itemInfo","innerText","setTimeout","rightItem","find","it","console","log","emptyCartMessage","reverse","index","event","subItem","ProductDetails","renderProductDetails","renderForms","saveFormsInfo","saveFeedback","loadFeedbacks","saveAllFeedbacks","productInfo","email","grade","comments","allFeedbacks","localStorage","getItem","JSON","parse","children","feedback","setItem","stringify","placeholder","Checkout","goHome","onSubmit","required","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uXAAO,SAAeA,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,MAAM,qDADxB,cACCC,EADD,OAECC,EAAOD,EAASE,OAFjB,kBAGED,GAHF,4C,sBAMA,SAAeE,EAAtB,oC,4CAAO,WAA+CC,EAAYC,GAA3D,mBAAAP,EAAA,sEACmBC,MAAM,mDAAD,OAAoDM,IAD5E,cACCC,EADD,gBAEmBP,MAAM,0DAAD,OAA2DK,IAFnF,cAECG,EAFD,gBAGmBR,MAAM,0DAAD,OAA2DK,EAA3D,cAA2EC,IAHnG,YAGCG,EAHD,kDAIiBA,EAAUN,QAJ3B,YAKDI,EALC,0CAKiBA,EAAUJ,QAL3B,YAMDK,EANC,0CAMiBA,EAAUL,QAN3B,6C,0BCqBQO,E,4JAvBb,WACE,MAAkDC,KAAKC,MAA/CC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,WACnC,OACE,4BACEC,cAAY,uBACZC,KAAK,SACLC,QAAUL,EACVM,UAAU,uCAETL,EACD,0BAAME,cAAY,qBAAqBG,UAAU,eAAeJ,Q,GAXnDK,aCsLNC,E,kDAlLb,aAAe,IAAD,8BACZ,gBA4BFC,aAAe,WACb,IAAQC,EAAY,EAAKX,MAAjBW,QACAC,EAAkB,EAAKC,MAAvBD,cACRD,EAAQG,KAAR,oBAA0BF,KA7B1B,EAAKG,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKG,kBAAoB,EAAKA,kBAAkBH,KAAvB,gBACzB,EAAKI,kBAAoB,EAAKA,kBAAkBJ,KAAvB,gBACzB,EAAKb,WAAa,EAAKA,WAAWa,KAAhB,gBAElB,EAAKH,MAAQ,CACXQ,kBAAcC,EACdC,oBAAgBD,EAChBV,cAAe,GACfT,WAAY,GAdF,E,4FAkBd,4BAAAhB,EAAA,sEAC2BD,IAD3B,OACQsC,EADR,OAEEzB,KAAK0B,SAAS,CAAEF,eAAgBC,IAFlC,gD,4HAKA,iCAAArC,EAAA,6DAA0BuC,EAA1B,EAA0BA,OAA1B,SACyBtC,MAAM,0DAAD,OAA2DsC,EAAOC,QADhG,cACQtC,EADR,gBAEqBA,EAASE,OAF9B,OAEQD,EAFR,OAGES,KAAK0B,SAAS,CAAEJ,aAAc/B,EAAKsC,UAHrC,gD,qFAYA,WACE,OACE,uBACExB,cAAY,wBADd,8D,mEAQJ,iCAAAjB,EAAA,6DAAuBuC,EAAvB,EAAuBA,OACfG,EAAeH,EAAOI,cAAcC,WAAWJ,MADvD,SAEyBnC,EAAgCqC,EAAcA,GAFvE,OAEQxC,EAFR,OAGEU,KAAK0B,SAAS,CAAEJ,aAAchC,EAASuC,UAHzC,gD,sFAMA,SAAkBI,GAChBjC,KAAK0B,UAAS,SAACQ,GAAD,MAAe,CAC3BrB,cAAc,GAAD,mBAAMqB,EAASrB,eAAf,CAA8BoB,IAC3C7B,WAAY+B,OAAOD,EAAS9B,YAAc,Q,wBAI9C,WACE,IAAQA,EAAeJ,KAAKc,MAApBV,WACR,OAAOA,I,2BAGT,WAAiB,IAAD,OACd,EAAqCJ,KAAKc,MAAlCQ,EAAR,EAAQA,aAAclB,EAAtB,EAAsBA,WACtB,GAA4B,IAAxBkB,EAAac,OAAc,OAAO,4DACtC,IAAMC,EACJ,0BACEhC,cAAY,gBACZG,UAAU,iBAFZ,oBAQF,OACE,yBAAKA,UAAU,mBACZc,EAAagB,KAAI,SAACC,GAAD,OAChB,yBACEC,IAAMD,EAAKE,GACXpC,cAAY,UACZG,UAAU,aAEV,yBAAKA,UAAU,aACb,2BAAI+B,EAAKG,OACT,uBAAGlC,UAAU,SACV+B,EAAKI,MACL,IAFH,SAKA,kBAAC,IAAD,CACEC,GAAE,WAAOL,EAAKE,GAAZ,YAAkBrC,GACpBC,cAAY,sBACZG,UAAU,aAHZ,0BAOA,4BACEF,KAAK,SACLD,cAAY,sBACZE,QAAU,kBAAM,EAAKc,kBAAkBkB,EAAKE,KAC5CjC,UAAU,2BAJZ,yBAQE+B,EAAI,SAAJ,eAAuCF,GAE3C,yBAAKQ,IAAMN,EAAKO,UAAYC,IAAI,mB,8BAO1C,WAAoB,IAAD,OAEjB,OAD2B/C,KAAKc,MAAxBU,eAESc,KAAI,SAACU,GAAD,OACjB,wBAAIR,IAAMQ,EAASP,IACjB,2BAAOQ,QAAUD,EAASP,GAAKpC,cAAY,YACzC,2BACEoC,GAAKO,EAASP,GACdS,KAAK,WACL5C,KAAK,QACLsB,MAAQoB,EAASP,GACjBU,SAAW,EAAK/B,oBAEjB4B,EAASE,Y,oBAOpB,WACE,MAAqDlD,KAAKc,MAAlDQ,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,eAAgBpB,EAAtC,EAAsCA,WACtC,OACE,yBAAKI,UAAU,kBACb,yBAAKA,UAAU,YACb,6BACE,2BACEH,cAAY,cACZG,UAAU,iBAEZ,4BACEF,KAAK,SACLD,cAAY,eACZE,QAAUP,KAAKgB,eACfR,UAAU,2BAJZ,cASF,kBAAC,EAAD,CACEN,cAAgBF,KAAKW,aACrBR,WAAW,WACXC,WAAaA,KAGjB,yBAAKI,UAAU,0BACb,4BACGgB,GAAkBxB,KAAKmB,oBAE1B,yBACEX,UAAU,gBAETc,EAAetB,KAAKkB,gBAAkBlB,KAAKoD,0B,GAvKrC3C,aCyHJ4C,G,wDA3Hb,aAAe,IAAD,8BACZ,gBAEKC,iBAAmB,EAAKA,iBAAiBrC,KAAtB,gBACxB,EAAKsC,aAAe,EAAKA,aAAatC,KAAlB,gBACpB,EAAKuC,QAAU,EAAKA,QAAQvC,KAAb,gBAEf,EAAKH,MAAQ,CACX2C,gBAAiB,GACjBC,WAAW,EACXC,UAAW,IAVD,E,qDAcd,WAAqB,IAAD,OACSC,EAAc5D,KAAKC,MAAtC4D,MAASC,OAAUF,MACvBA,IACF5D,KAAK0B,SAAS,CAAEgC,WAAW,IAC3B1D,KAAK0B,SAAS,CAAE+B,gBAAiBG,EAAMG,MAAM,OAAQ,kBAAM,EAAKT,yB,8BAIpE,WAAoB,IAAD,OACTG,EAAoBzD,KAAKc,MAAzB2C,gBACFO,EAAiB,GACvBP,EAAgBQ,QAAhB,uCAAwB,WAAOxB,GAAP,eAAArD,EAAA,sEACC,EAAK8E,gBAAgBzB,GADtB,OAChB0B,EADgB,OAEtBH,EAAejD,KAAKoD,EAASzB,OAC7B,EAAKhB,SAAS,CAAEiC,UAAWK,IAHL,2CAAxB,yD,oEAOF,WAAsBvB,GAAtB,iBAAArD,EAAA,sEACyBC,MAAM,sCAAD,OAAuCoD,IADrE,cACQnD,EADR,gBAEqBA,EAASE,OAF9B,cAEQD,EAFR,yBAGSA,GAHT,2C,mHAMA,aAA0BgD,GAA1B,4BAAAnD,EAAA,6DAAgBuC,EAAhB,EAAgBA,OACN8B,EAAoBzD,KAAKc,MAAzB2C,gBACJrD,EAAa+B,OAAOR,EAAOI,cAAcC,WAAWoC,WAClDR,EAAQ,GAHhB,SAIQH,EAAgBQ,QAAhB,uCAAwB,WAAOxB,GAAP,SAAArD,EAAA,kEAC5BwE,EAD4B,SACX,EAAKM,gBAAgBzB,GADV,wBACtB1B,KADsB,2DAAxB,uDAJR,OAOqB,IACnBsD,YAAW,WACT,IAAMC,EAAYV,EAAMW,MAAK,SAACC,GAAD,OAAQA,EAAG9B,QAAUH,KAClDkC,QAAQC,IAAIJ,GAERlE,EAAakE,EAAS,qBACxBlE,GAAc,GAEhBuB,EAAOI,cAAcC,WAAWoC,UAAYhE,IAR3B,KAUnBqE,QAAQC,IAAInC,GAjBd,gD,8EAoBA,YAAqB,IAAXZ,EAAU,EAAVA,OACJvB,EAAa+B,OAAOR,EAAOI,cAAcC,WAAWoC,WACpDhE,EAAa,EAAGA,GAAc,EAC7BA,EAAa,EAClBuB,EAAOI,cAAcC,WAAWoC,UAAYhE,I,0BAG9C,WACsBJ,KAAKC,MAAjBW,QACAG,KAAK,e,oBAGf,WAAU,IAAD,OACD4D,EACJ,uBACEtE,cAAY,+BADd,8BAKF,EAAiCL,KAAKc,MAA9B4C,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UACnB,OACE,yBAAKnD,UAAU,aACZkD,GAAaiB,EACbhB,EAAUiB,UAAUtC,KAAI,SAACC,EAAMsC,GAAP,OACvB,yBAAKrC,IAAMqC,EAAQrE,UAAU,iBAC3B,uBAAGH,cAAY,8BAA8BkC,GAC7C,yBAAK/B,UAAU,mBACb,uBAAGH,cAAY,iCAAiCG,UAAU,SAA1D,KACA,4BACEF,KAAK,SACLD,cAAY,4BACZE,QAAO,uCAAG,WAAOuE,GAAP,SAAA1F,EAAA,+EAAiB,EAAKoE,QAAQsB,EAAOvC,IAArC,2CAAH,sDACP/B,UAAU,2BAJZ,KAQA,4BACEF,KAAK,SACLD,cAAY,4BACZE,QAAU,EAAKwE,QACfvE,UAAU,0BAJZ,UAWN,4BACEF,KAAK,SACLD,cAAY,oBACZE,QAAUP,KAAKuD,aACf/C,UAAU,mBAJZ,iB,GA1GeC,c,QCgSRuE,E,kDA9Rb,WAAY/E,GAAQ,IAAD,uBACjB,gBAkCFU,aAAe,WACb,IAAQC,EAAY,EAAKX,MAAjBW,QACAC,EAAkB,EAAKC,MAAvBD,cACRD,EAAQG,KAAR,oBAA0BF,KAnC1B,EAAKoE,qBAAuB,EAAKA,qBAAqBhE,KAA1B,gBAC5B,EAAKiE,YAAc,EAAKA,YAAYjE,KAAjB,gBACnB,EAAKkE,cAAgB,EAAKA,cAAclE,KAAnB,gBACrB,EAAKmE,aAAe,EAAKA,aAAanE,KAAlB,gBACpB,EAAKoE,cAAgB,EAAKA,cAAcpE,KAAnB,gBACrB,EAAKqE,iBAAmB,EAAKA,iBAAiBrE,KAAtB,gBACxB,EAAKb,WAAa,EAAKA,WAAWa,KAAhB,gBAElB,IAA2Bb,EAAmBH,EAAtC4D,MAASC,OAAU1D,WAXV,OAajB,EAAKU,MAAQ,CACXyE,YAAa,GACbC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,aAAc,GACd9E,cAAe,GACfT,cApBe,E,4FAwBnB,oCAAAhB,EAAA,6DACEY,KAAKqF,gBADP,EAEoDrF,KAAKC,MAA/C4D,MAASC,OAAUrB,EAF7B,EAE6BA,GAAIrC,EAFjC,EAEiCA,WAFjC,SAGyBf,MAAM,sCAAD,OAAuCoD,IAHrE,cAGQnD,EAHR,gBAIwBA,EAASE,OAJjC,OAIQqC,EAJR,OAKE7B,KAAK0B,SAAS,CACZ6D,YAAa1D,EACbzB,eAPJ,gD,qFAiBA,SAAkB6B,GAChBjC,KAAK0B,UAAS,SAACQ,GAAD,MAAe,CAC3BrB,cAAc,GAAD,mBAAMqB,EAASrB,eAAf,CAA8BoB,IAC3C7B,WAAY+B,OAAOD,EAAS9B,YAAc,Q,wBAI9C,WACE,IAAQA,EAAeJ,KAAKc,MAApBV,WACR,OAAOA,I,2BAGT,WAAiB,IAAD,OACRb,EAAOqG,aAAaC,QAAQ,aAC9BtG,GACgBuG,KAAKC,MAAMxG,GACnB0E,SAAQ,SAAC1B,GACjB,EAAKb,UAAS,SAACQ,EAAU2C,GAAX,MAAsB,CAClCc,aAAc,CACZzD,EAASyD,aACT,yBAAKnD,IAAMqC,EAAQrE,UAAU,YAC3B,uBACEH,cAAckC,EAAKtC,MAAM+F,SAAS,GAAG/F,MAAM,gBAE1CsC,EAAKtC,MAAM+F,SAAS,GAAG/F,MAAM+F,UAEhC,mCAEG,IACAzD,EAAKtC,MAAM+F,SAAS,GAAG/F,MAAM+F,SAAS,IAEzC,uBACE3F,cAAckC,EAAKtC,MAAM+F,SAAS,GAAG/F,MAAM,gBAE1CsC,EAAKtC,MAAM+F,SAAS,GAAG/F,MAAM+F,qB,0BAS5C,WAAgB,IAAD,OACb,EAAmChG,KAAKc,MAAhC0E,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,SAChBO,EACJ,yBAAKzD,IAAMgD,EAAQhF,UAAU,YAC3B,uBAAGH,cAAY,wBAAwBmF,GACvC,mCAEG,IACAC,GAEH,uBAAGpF,cAAY,6BAA6BqF,IAGhD1F,KAAK0B,UAAS,SAACQ,GAAD,MAAe,CAC3ByD,aAAa,GAAD,mBAAMzD,EAASyD,cAAf,CAA6BM,QACvC,kBAAM,EAAKX,wB,8BAGjB,WACE,IAAQK,EAAiB3F,KAAKc,MAAtB6E,aACRC,aAAaM,QAAQ,YAAaJ,KAAKK,UAAUR,M,2BAGnD,YAA2B,IAAXhE,EAAU,EAAVA,OACd3B,KAAK0B,SAAL,eACGC,EAAOuB,KAAOvB,EAAOC,U,kCAI1B,WAAwB,IAAD,OACb2D,EAAgBvF,KAAKc,MAArByE,YACFlD,EACJ,0BACEhC,cAAY,gBACZG,UAAU,iBAFZ,oBAQF,OACE,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,uBAAGH,cAAY,uBAAuBkF,EAAY7C,OAClD,2BACG6C,EAAY5C,MACZ,IAFH,SAKA,4BACErC,KAAK,SACLD,cAAY,6BACZE,QAAU,kBAAM,EAAKc,kBAAkBkE,EAAY9C,KACnDjC,UAAU,2BAJZ,yBAQyB,IAAvB+E,EAAYnD,QAAgBmD,EAAW,SAAX,eAC/BlD,GAED,yBAAKQ,IAAM0C,EAAYzC,UAAYC,IAAMwC,EAAYrC,QAEtDlD,KAAKkF,iB,yBAKZ,WACE,OACE,yBAAK1E,UAAU,kBACb,gDACA,2BACEH,cAAY,uBACZC,KAAK,OACL4C,KAAK,QACLC,SAAWnD,KAAKmF,cAChB3E,UAAU,eACV4F,YAAY,UAEd,6BACE,2BACE/F,cAAY,WACZ4C,QAAQ,SACRzC,UAAU,gCAEV,2BACEiC,GAAG,SACHnC,KAAK,QACL4C,KAAK,QACLtB,MAAM,IACNuB,SAAWnD,KAAKmF,cAChB3E,UAAU,qBAEX,IAbH,KAgBA,2BACEH,cAAY,WACZ4C,QAAQ,SACRzC,UAAU,gCAEV,2BACEiC,GAAG,SACHnC,KAAK,QACL4C,KAAK,QACLtB,MAAM,IACNuB,SAAWnD,KAAKmF,cAChB3E,UAAU,qBAEX,IAbH,KAgBA,2BACEH,cAAY,WACZ4C,QAAQ,SACRzC,UAAU,gCAEV,2BACEiC,GAAG,SACHnC,KAAK,QACL4C,KAAK,QACLtB,MAAM,IACNuB,SAAWnD,KAAKmF,cAChB3E,UAAU,qBAEX,IAbH,KAgBA,2BACEH,cAAY,WACZ4C,QAAQ,SACRzC,UAAU,gCAEV,2BACEiC,GAAG,SACHnC,KAAK,QACL4C,KAAK,QACLtB,MAAM,IACNuB,SAAWnD,KAAKmF,cAChB3E,UAAU,qBAEX,IAbH,KAgBA,2BACEH,cAAY,WACZ4C,QAAQ,SACRzC,UAAU,gCAEV,2BACEiC,GAAG,SACHnC,KAAK,QACL4C,KAAK,QACLtB,MAAM,IACNuB,SAAWnD,KAAKmF,cAChB3E,UAAU,qBAEX,IAbH,MAiBF,8BACEH,cAAY,4BACZ6C,KAAK,WACLC,SAAWnD,KAAKmF,cAChB3E,UAAU,eACV4F,YAAY,kBAEd,4BACE/F,cAAY,oBACZC,KAAK,SACLC,QAAUP,KAAKoF,aACf5E,UAAU,wCAJZ,a,oBAYN,WACE,MAAqCR,KAAKc,MAAlC6E,EAAR,EAAQA,aAAcvF,EAAtB,EAAsBA,WACtB,OACE,yBAAKI,UAAU,mBACb,kBAAC,EAAD,CACEN,cAAgBF,KAAKW,aACrBR,WAAW,WACXC,WAAaA,IAEdJ,KAAKiF,uBACLU,O,GApRoBlF,aCoEd4F,E,kDApEb,aAAe,IAAD,8BACZ,gBAEKC,OAAS,EAAKA,OAAOrF,KAAZ,gBAHF,E,0CAMd,WACsBjB,KAAKC,MAAjBW,QACAG,KAAK,O,oBAGf,WACE,OACE,yBAAKP,UAAU,YACb,0BAAMA,UAAU,WAAW+F,SAAWvG,KAAKsG,QACzC,oDACA,2BACE9F,UAAU,eACVH,cAAY,oBACZ+F,YAAY,gBACZI,UAAQ,IAEV,2BACEhG,UAAU,eACVH,cAAY,iBACZ+F,YAAY,QACZI,UAAQ,IAEV,2BACEhG,UAAU,eACVH,cAAY,eACZ+F,YAAY,MACZI,UAAQ,IAEV,2BACEhG,UAAU,eACVH,cAAY,iBACZ+F,YAAY,UACZI,UAAQ,IAEV,2BACEhG,UAAU,eACVH,cAAY,eACZ+F,YAAY,MACZI,UAAQ,IAEV,2BACEhG,UAAU,eACVH,cAAY,mBACZ+F,YAAY,cACZI,UAAQ,IAEV,2BACElG,KAAK,SACLE,UAAU,0BACVoB,MAAM,mBACN4E,UAAQ,U,GAzDG/F,aCqBRgG,MAhBf,WACE,OACE,yBAAKjG,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkG,KAAK,IAAIC,OAAK,EAACC,UAAYlG,IAClC,kBAAC,IAAD,CAAOgG,KAAK,mBAAmBC,OAAK,EAACC,UAAYvD,IACjD,kBAAC,IAAD,CAAOqD,KAAK,YAAYC,OAAK,EAACC,UAAYvD,IAC1C,kBAAC,IAAD,CAAOqD,KAAK,YAAYC,OAAK,EAACC,UAAYP,IAC1C,kBAAC,IAAD,CAAOK,KAAK,mBAAmBC,OAAK,EAACC,UAAY5B,QCLvC6B,QACW,cAA7BC,OAAOC,SAASC,UAEkB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnD,MAC1B,2DCZNoD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNpD,QAAQoD,MAAMA,EAAMC,c","file":"static/js/main.71537636.chunk.js","sourcesContent":["export async function getCategories() {\n  const response = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const data = response.json();\n  return data;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const response1 = await fetch(`https://api.mercadolibre.com/sites/MLB/search?q=${query}`);\n  const response2 = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`);\n  const response3 = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  if (response3) return response3.json();\n  if (response1) return response1.json();\n  if (response2) return response2.json();\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  render() {\n    const { clickFunction, buttonText, itemsCount } = this.props;\n    return (\n      <button\n        data-testid=\"shopping-cart-button\"\n        type=\"submit\"\n        onClick={ clickFunction }\n        className=\"btn btn-outline-success cart-button\"\n      >\n        {buttonText}\n        <span data-testid=\"shopping-cart-size\" className=\"items-count\">{itemsCount}</span>\n      </button>\n\n    );\n  }\n}\n\nButton.propTypes = {\n  clickFunction: PropTypes.func.isRequired,\n  buttonText: PropTypes.string.isRequired,\n  itemsCount: PropTypes.number.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\nimport Button from './Button';\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.searchProducts = this.searchProducts.bind(this);\n    this.renderResults = this.renderResults.bind(this);\n    this.renderCategories = this.renderCategories.bind(this);\n    this.setCategoryFilter = this.setCategoryFilter.bind(this);\n    this.addItemToShopCart = this.addItemToShopCart.bind(this);\n    this.itemsCount = this.itemsCount.bind(this);\n\n    this.state = {\n      productsList: undefined,\n      categoriesList: undefined,\n      shopCartItems: [],\n      itemsCount: 0,\n    };\n  }\n\n  async componentDidMount() {\n    const categorias = await getCategories();\n    this.setState({ categoriesList: categorias });\n  }\n\n  async setCategoryFilter({ target }) {\n    const response = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${target.value}`);\n    const data = await response.json();\n    this.setState({ productsList: data.results });\n  }\n\n  goToShopCart = () => {\n    const { history } = this.props;\n    const { shopCartItems } = this.state;\n    history.push(`/shopcart/${shopCartItems}`);\n  }\n\n  emptyListMessage() {\n    return (\n      <p\n        data-testid=\"home-initial-message\"\n      >\n        Digite algum termo de pesquisa ou escolha uma categoria.\n      </p>\n    );\n  }\n\n  async searchProducts({ target }) {\n    const searchFilter = target.parentElement.firstChild.value;\n    const response = await getProductsFromCategoryAndQuery(searchFilter, searchFilter);\n    this.setState({ productsList: response.results });\n  }\n\n  addItemToShopCart(itemId) {\n    this.setState((previous) => ({\n      shopCartItems: [...previous.shopCartItems, itemId],\n      itemsCount: Number(previous.itemsCount) + 1,\n    }));\n  }\n\n  itemsCount() {\n    const { itemsCount } = this.state;\n    return itemsCount;\n  }\n\n  renderResults() {\n    const { productsList, itemsCount } = this.state;\n    if (productsList.length === 0) return <p>Nenhum produto foi encontrado</p>;\n    const freeShipping = (\n      <span\n        data-testid=\"free-shipping\"\n        className=\"free-shipping\"\n      >\n        Frete Grátis!\n      </span>);\n    const shipping = 'shipping';\n    const freeShippingString = 'free_shipping';\n    return (\n      <div className=\"items-container\">\n        {productsList.map((item) => (\n          <div\n            key={ item.id }\n            data-testid=\"product\"\n            className=\"item-card\"\n          >\n            <div className=\"item-info\">\n              <p>{item.title}</p>\n              <p className=\"price\">\n                {item.price}\n                {' '}\n                reais\n              </p>\n              <Link\n                to={ `/${item.id}/${itemsCount}` }\n                data-testid=\"product-detail-link\"\n                className=\"more-info\"\n              >\n                Mais Informações\n              </Link>\n              <button\n                type=\"button\"\n                data-testid=\"product-add-to-cart\"\n                onClick={ () => this.addItemToShopCart(item.id) }\n                className=\"btn btn-outline-success\"\n              >\n                Adicionar ao carrinho\n              </button>\n              {(item[shipping][freeShippingString]) && freeShipping}\n            </div>\n            <img src={ item.thumbnail } alt=\"Product\" />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  renderCategories() {\n    const { categoriesList } = this.state;\n    return (\n      categoriesList.map((category) => (\n        <li key={ category.id }>\n          <label htmlFor={ category.id } data-testid=\"category\">\n            <input\n              id={ category.id }\n              name=\"category\"\n              type=\"radio\"\n              value={ category.id }\n              onChange={ this.setCategoryFilter }\n            />\n            {category.name}\n          </label>\n        </li>\n      ))\n    );\n  }\n\n  render() {\n    const { productsList, categoriesList, itemsCount } = this.state;\n    return (\n      <div className=\"home-container\">\n        <div className=\"home-top\">\n          <div>\n            <input\n              data-testid=\"query-input\"\n              className=\"form-control\"\n            />\n            <button\n              type=\"button\"\n              data-testid=\"query-button\"\n              onClick={ this.searchProducts }\n              className=\"btn btn-outline-success\"\n            >\n              Pesquisar\n            </button>\n          </div>\n          <Button\n            clickFunction={ this.goToShopCart }\n            buttonText=\"Carrinho\"\n            itemsCount={ itemsCount }\n          />\n        </div>\n        <div className=\"main-content-container\">\n          <ul>\n            {categoriesList && this.renderCategories()}\n          </ul>\n          <div\n            className=\"main-content\"\n          >\n            {productsList ? this.renderResults() : this.emptyListMessage() }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  history: PropTypes.objectOf,\n}.isRequired;\n\nexport default Home;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ShopCart extends Component {\n  constructor() {\n    super();\n\n    this.setShopCartItems = this.setShopCartItems.bind(this);\n    this.goToCheckout = this.goToCheckout.bind(this);\n    this.addItem = this.addItem.bind(this);\n\n    this.state = {\n      shopCartItemsId: [],\n      emptyCart: true,\n      cartItems: [],\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { items } } } = this.props;\n    if (items) {\n      this.setState({ emptyCart: false });\n      this.setState({ shopCartItemsId: items.split(',') }, () => this.setShopCartItems());\n    }\n  }\n\n  setShopCartItems() {\n    const { shopCartItemsId } = this.state;\n    const itemsInfoArray = [];\n    shopCartItemsId.forEach(async (id) => {\n      const itemInfo = await this.requestItemInfo(id);\n      itemsInfoArray.push(itemInfo.title);\n      this.setState({ cartItems: itemsInfoArray });\n    });\n  }\n\n  async requestItemInfo(id) {\n    const response = await fetch(`https://api.mercadolibre.com/items/${id}`);\n    const data = await response.json();\n    return data;\n  }\n\n  async addItem({ target }, item) {\n    const { shopCartItemsId } = this.state;\n    let itemsCount = Number(target.parentElement.firstChild.innerText);\n    const items = [];\n    await shopCartItemsId.forEach(async (id) => {\n      items.push(await this.requestItemInfo(id));\n    });\n    const halfSecond = 500;\n    setTimeout(() => {\n      const rightItem = items.find((it) => it.title === item);\n      console.log(rightItem);\n      const lint = 'available_quantity';\n      if (itemsCount < rightItem[lint]) {\n        itemsCount += 1;\n      }\n      target.parentElement.firstChild.innerText = itemsCount;\n    }, halfSecond);\n    console.log(item);\n  }\n\n  subItem({ target }) {\n    let itemsCount = Number(target.parentElement.firstChild.innerText);\n    if (itemsCount > 1) itemsCount -= 1;\n    else itemsCount = 1;\n    target.parentElement.firstChild.innerText = itemsCount;\n  }\n\n  goToCheckout() {\n    const { history } = this.props;\n    history.push('/checkout');\n  }\n\n  render() {\n    const emptyCartMessage = (\n      <p\n        data-testid=\"shopping-cart-empty-message\"\n      >\n        Seu carrinho está vazio\n      </p>);\n    const { emptyCart, cartItems } = this.state;\n    return (\n      <div className=\"shop-cart\">\n        {emptyCart && emptyCartMessage}\n        {cartItems.reverse().map((item, index) => (\n          <div key={ index } className=\"checkout-item\">\n            <p data-testid=\"shopping-cart-product-name\">{item}</p>\n            <div className=\"units-container\">\n              <p data-testid=\"shopping-cart-product-quantity\" className=\"units\">1</p>\n              <button\n                type=\"button\"\n                data-testid=\"product-increase-quantity\"\n                onClick={ async (event) => this.addItem(event, item) }\n                className=\"btn btn-outline-success\"\n              >\n                +\n              </button>\n              <button\n                type=\"button\"\n                data-testid=\"product-decrease-quantity\"\n                onClick={ this.subItem }\n                className=\"btn btn-outline-danger\"\n              >\n                -\n              </button>\n            </div>\n          </div>\n        ))}\n        <button\n          type=\"button\"\n          data-testid=\"checkout-products\"\n          onClick={ this.goToCheckout }\n          className=\"btn btn-success\"\n        >\n          Checkout\n        </button>\n      </div>\n    );\n  }\n}\n\nShopCart.propTypes = {\n  match: PropTypes.objectOf.isRequired,\n  history: PropTypes.objectOf.isRequired,\n};\n\nexport default ShopCart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\n\nclass ProductDetails extends Component {\n  constructor(props) {\n    super();\n\n    this.renderProductDetails = this.renderProductDetails.bind(this);\n    this.renderForms = this.renderForms.bind(this);\n    this.saveFormsInfo = this.saveFormsInfo.bind(this);\n    this.saveFeedback = this.saveFeedback.bind(this);\n    this.loadFeedbacks = this.loadFeedbacks.bind(this);\n    this.saveAllFeedbacks = this.saveAllFeedbacks.bind(this);\n    this.itemsCount = this.itemsCount.bind(this);\n\n    const { match: { params: { itemsCount } } } = props;\n\n    this.state = {\n      productInfo: [],\n      email: '',\n      grade: '',\n      comments: '',\n      allFeedbacks: [],\n      shopCartItems: [],\n      itemsCount,\n    };\n  }\n\n  async componentDidMount() {\n    this.loadFeedbacks();\n    const { match: { params: { id, itemsCount } } } = this.props;\n    const response = await fetch(`https://api.mercadolibre.com/items/${id}`);\n    const results = await response.json();\n    this.setState({\n      productInfo: results,\n      itemsCount,\n    });\n  }\n\n  goToShopCart = () => {\n    const { history } = this.props;\n    const { shopCartItems } = this.state;\n    history.push(`/shopcart/${shopCartItems}`);\n  }\n\n  addItemToShopCart(itemId) {\n    this.setState((previous) => ({\n      shopCartItems: [...previous.shopCartItems, itemId],\n      itemsCount: Number(previous.itemsCount) + 1,\n    }));\n  }\n\n  itemsCount() {\n    const { itemsCount } = this.state;\n    return itemsCount;\n  }\n\n  loadFeedbacks() {\n    const data = localStorage.getItem('feedbacks');\n    if (data) {\n      const dataArray = JSON.parse(data);\n      dataArray.forEach((item) => {\n        this.setState((previous, index) => ({\n          allFeedbacks: [\n            previous.allFeedbacks,\n            <div key={ index } className=\"feedback\">\n              <p\n                data-testid={ item.props.children[0].props['data-testid'] }\n              >\n                {item.props.children[0].props.children}\n              </p>\n              <p>\n                Nota:\n                {' '}\n                {item.props.children[1].props.children[2]}\n              </p>\n              <p\n                data-testid={ item.props.children[2].props['data-testid'] }\n              >\n                {item.props.children[2].props.children}\n              </p>\n            </div>,\n          ],\n        }));\n      });\n    }\n  }\n\n  saveFeedback() {\n    const { email, grade, comments } = this.state;\n    const feedback = (\n      <div key={ email } className=\"feedback\">\n        <p data-testid=\"product-detail-email\">{email}</p>\n        <p>\n          Nota:\n          {' '}\n          {grade}\n        </p>\n        <p data-testid=\"product-detail-evaluation\">{comments}</p>\n      </div>\n    );\n    this.setState((previous) => ({\n      allFeedbacks: [...previous.allFeedbacks, feedback],\n    }), () => this.saveAllFeedbacks());\n  }\n\n  saveAllFeedbacks() {\n    const { allFeedbacks } = this.state;\n    localStorage.setItem('feedbacks', JSON.stringify(allFeedbacks));\n  }\n\n  saveFormsInfo({ target }) {\n    this.setState({\n      [target.name]: target.value,\n    });\n  }\n\n  renderProductDetails() {\n    const { productInfo } = this.state;\n    const freeShipping = (\n      <span\n        data-testid=\"free-shipping\"\n        className=\"free-shipping\"\n      >\n        Frete Grátis!\n      </span>);\n    const shipping = 'shipping';\n    const freeShippingString = 'free_shipping';\n    return (\n      <div className=\"product-details-container\">\n        <div className=\"item-card\">\n          <div className=\"item-info\">\n            <p data-testid=\"product-detail-name\">{productInfo.title}</p>\n            <p>\n              {productInfo.price}\n              {' '}\n              reais\n            </p>\n            <button\n              type=\"button\"\n              data-testid=\"product-detail-add-to-cart\"\n              onClick={ () => this.addItemToShopCart(productInfo.id) }\n              className=\"btn btn-outline-success\"\n            >\n              Adicionar ao carrinho\n            </button>\n            {(productInfo.length !== 0 && productInfo[shipping][freeShippingString])\n        && freeShipping}\n          </div>\n          <img src={ productInfo.thumbnail } alt={ productInfo.name } />\n        </div>\n        {this.renderForms()}\n      </div>\n    );\n  }\n\n  renderForms() {\n    return (\n      <div className=\"form-container\">\n        <p>Avalie o produto!</p>\n        <input\n          data-testid=\"product-detail-email\"\n          type=\"text\"\n          name=\"email\"\n          onChange={ this.saveFormsInfo }\n          className=\"form-control\"\n          placeholder=\"Email\"\n        />\n        <div>\n          <label\n            data-testid=\"1-rating\"\n            htmlFor=\"grade1\"\n            className=\"form-check-label grade-label\"\n          >\n            <input\n              id=\"grade1\"\n              type=\"radio\"\n              name=\"grade\"\n              value=\"1\"\n              onChange={ this.saveFormsInfo }\n              className=\"form-check-input\"\n            />\n            {' '}\n            1\n          </label>\n          <label\n            data-testid=\"2-rating\"\n            htmlFor=\"grade2\"\n            className=\"form-check-label grade-label\"\n          >\n            <input\n              id=\"grade2\"\n              type=\"radio\"\n              name=\"grade\"\n              value=\"2\"\n              onChange={ this.saveFormsInfo }\n              className=\"form-check-input\"\n            />\n            {' '}\n            2\n          </label>\n          <label\n            data-testid=\"3-rating\"\n            htmlFor=\"grade3\"\n            className=\"form-check-label grade-label\"\n          >\n            <input\n              id=\"grade3\"\n              type=\"radio\"\n              name=\"grade\"\n              value=\"3\"\n              onChange={ this.saveFormsInfo }\n              className=\"form-check-input\"\n            />\n            {' '}\n            3\n          </label>\n          <label\n            data-testid=\"4-rating\"\n            htmlFor=\"grade4\"\n            className=\"form-check-label grade-label\"\n          >\n            <input\n              id=\"grade4\"\n              type=\"radio\"\n              name=\"grade\"\n              value=\"4\"\n              onChange={ this.saveFormsInfo }\n              className=\"form-check-input\"\n            />\n            {' '}\n            4\n          </label>\n          <label\n            data-testid=\"5-rating\"\n            htmlFor=\"grade5\"\n            className=\"form-check-label grade-label\"\n          >\n            <input\n              id=\"grade5\"\n              type=\"radio\"\n              name=\"grade\"\n              value=\"5\"\n              onChange={ this.saveFormsInfo }\n              className=\"form-check-input\"\n            />\n            {' '}\n            5\n          </label>\n        </div>\n        <textarea\n          data-testid=\"product-detail-evaluation\"\n          name=\"comments\"\n          onChange={ this.saveFormsInfo }\n          className=\"form-control\"\n          placeholder=\"Comentário\"\n        />\n        <button\n          data-testid=\"submit-review-btn\"\n          type=\"button\"\n          onClick={ this.saveFeedback }\n          className=\"form-control btn btn-outline-success\"\n        >\n          Enviar\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    const { allFeedbacks, itemsCount } = this.state;\n    return (\n      <div className=\"product-details\">\n        <Button\n          clickFunction={ this.goToShopCart }\n          buttonText=\"Carrinho\"\n          itemsCount={ itemsCount }\n        />\n        {this.renderProductDetails()}\n        {allFeedbacks}\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  match: PropTypes.objectOf.isRequired,\n  history: PropTypes.objectOf.isRequired,\n};\n\nexport default ProductDetails;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Checkout extends Component {\n  constructor() {\n    super();\n\n    this.goHome = this.goHome.bind(this);\n  }\n\n  goHome() {\n    const { history } = this.props;\n    history.push('/');\n  }\n\n  render() {\n    return (\n      <div className=\"checkout\">\n        <form className=\"cadastro\" onSubmit={ this.goHome }>\n          <p>Faça seu cadastro!</p>\n          <input\n            className=\"form-control\"\n            data-testid=\"checkout-fullname\"\n            placeholder=\"Nome completo\"\n            required\n          />\n          <input\n            className=\"form-control\"\n            data-testid=\"checkout-email\"\n            placeholder=\"Email\"\n            required\n          />\n          <input\n            className=\"form-control\"\n            data-testid=\"checkout-cpf\"\n            placeholder=\"CPF\"\n            required\n          />\n          <input\n            className=\"form-control\"\n            data-testid=\"checkout-phone\"\n            placeholder=\"Celular\"\n            required\n          />\n          <input\n            className=\"form-control\"\n            data-testid=\"checkout-cep\"\n            placeholder=\"CEP\"\n            required\n          />\n          <input\n            className=\"form-control\"\n            data-testid=\"checkout-address\"\n            placeholder=\"Endereço\"\n            required\n          />\n          <input\n            type=\"submit\"\n            className=\"btn btn-outline-success\"\n            value=\"Finalizar Compra\"\n            required\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  history: PropTypes.objectOf.isRequired,\n};\n\nexport default Checkout;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport './App.css';\nimport ShopCart from './components/ShopCart';\nimport ProductDetails from './components/ProductDetails';\nimport Checkout from './components/Checkout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route path=\"/\" exact component={ Home } />\n          <Route path=\"/shopcart/:items\" exact component={ ShopCart } />\n          <Route path=\"/shopcart\" exact component={ ShopCart } />\n          <Route path=\"/checkout\" exact component={ Checkout } />\n          <Route path=\"/:id/:itemsCount\" exact component={ ProductDetails } />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}